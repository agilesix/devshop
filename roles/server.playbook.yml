###
# DevShop Server
#
# All-in-one DevShop. Includes all services required to run on one instance.
#
# Container name: devshop/server
#
###
---
- hosts: all
  become: true

  vars:
    # Hostname must be set when container is launched, which "hostname" option.
    server_hostname: "devshop.local.computer"
    server_hostname_ignore_errors: true

    # The geerlingguy.mysql and opendevshop.devmaster roles both use this
    mysql_root_password: root

    # @TODO: Install multiple versions per-container: https://github.com/oerdnj/deb.sury.org/wiki/Managing-Multiple-Versions
    php_version: "7.2"

    php_default_version_debian: "{{ php_version }}"

    # Needs to be set to false when developing so your code doesn't get updated inside the container on build.
    # Code gets copied using the Dockerfile
    # @TODO: This may not be needed now that the "ancestor" check is in place.
    devshop_cli_update: false

    # This is set to TRUE to ensure the playbooks don't try to run the devmaster upgade every time they run (aka on robo up).
    devmaster_skip_upgrade: true

    # @TODO: Figure out the best way to set `ansible_python_interpreter` for different OS.
    # CentOS 7 overrides this variable below.
    # ansible_python_interpreter: /usr/bin/python3

    # Supervisor will start when the container and systemd start.
    supervisor_started: false

    # @TODO: Make a cleaner separation between playbooks and makefiles for docker hub, playbooks for CI testing, and local development.s
    # Use local dev makefile because it copies the files directly from this repo.
    # build-devmaster.make is designed for standalone use, and always downloads 1.x until release.
    devshop_makefile: "{{ devshop_cli_path }}/build-devmaster-dev.make.yml"

  pre_tasks:
    - name: Set variables ({{ ansible_os_family}} {{ansible_distribution_major_version}})
      when:
        - ansible_os_family == 'RedHat'
        - devshop_install_phase == 'buildtime'
      set_fact:
        apache_state: stopped

    # @TODO: I was unable to get ubuntu18 installs to properly detect and install the 'mysql_python_package_debian' packages.
    # https://github.com/opendevshop/devshop/pull/518/checks?check_run_id=517865257#step:7:523
    # By default, geerlingguy.mysql loads this automatically. However, in the automated tests for the role, Jeff DOES force set the variable:
    - name: Set all Debian systems to use python3-mysqldb for mysql_python_package_debian.
      when:
        - ansible_os_family == 'Debian'
      set_fact:
        mysql_python_package_debian: python3-mysqldb
      tags: [mysql]

  roles:
    - role: geerlingguy.repo-remi
      when: ansible_os_family == 'RedHat'
      tags: [geerlingguy, apache]

    - role: opendevshop.apache
      tags: [opendevshop, opendevshop.apache]

    - role: geerlingguy.apache
      tags: [geerlingguy, apache]

    - role: geerlingguy.mysql
      tags: [geerlingguy, mysql]

    - geerlingguy.php-versions
    - geerlingguy.php
    - geerlingguy.php-mysql

    - geerlingguy.composer
    - opendevshop.devmaster
